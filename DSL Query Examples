GET /courses/classroom/_search

# Query compnent 
# match_all get all documents
GET /courses/_search
{
  "query": {
    "match_all": {}
  }
}

# match to get courses with name computer
GET /courses/_search
{
  "query": {
    "match": {
      "name" : "computer"
    }
  }
}

PUT /courses/classroom/7
{
    "name": "Computer Computer 250",
    "room": "C8",
    "professor": {
        "name": "Gregg Payne",
        "department": "engineering",
        "facutly_type": "part-time",
        "email": "payneg@onuni.com"
        },
    "students_enrolled": 33,
    "course_publish_date": "2012-08-20",
    "course_description": "cpt Int 250 gives students an integrated and rigorous picture of applied computer science, as it comes to play in the construction of a simple yet powerful computer system. "
}

 
# match to get courses with name computer
# Relvency as document 7 has new max scroe field
GET /courses/_search
{
  "query": {
    "match": {
      "name" : "computer"
    }
  }
} 

# Get documents with email field populated
# see how access nested field.
# Also this checks for field not value.
GET /courses/_search
{
  "query" :
  {
    "exists" : {
      "field" : "professor.email"
    }
  }
}

# Match on 2 criteria
#  Inside -> Bool ->  Must keyword [array list]
GET /courses/_search
{
  "query" :
  {
    "bool" : {
        "must" : [
          {"match" : {"name" : "Computer"}},
          {"match": {"room" : "c8"}}
      ]
    }
  }
}

# Must Not
# Should doesn't take predence over must unless we define minumum_should_match
GET /courses/_search
{
  "query" :
  {
    "bool" : {
        "must" : [
          {"match" : {"name" : "accounting"}},
          {"match" : {"room" : "e3"}}
        ],
        "must_not" : [
          {"match" : {"professor.name" : "bill"}}
        ],
        "should": [
           {"match" : {"name" : "computer"}}
        ],
        "minimum_should_match": 1
    }
  }
}

# 
GET /courses/_search
{
  "query" :
  {
    "bool" : {
        "must" : [
          {"match" : {"name" : "accounting"}}
        ],
        "must_not" : [
          {"match" : {"professor.name" : "bill"}}
        ],
        "should": [
          {"match": {"room": "e7"}}
        ]
    }
  }
}

# Multi Match Query (IS like OR):
# Find accouting term present in multiple fields.
GET /courses/_search
{
  "query": {
    "multi_match": {
      "query": "accounting",
      "fields": ["name", "professor.department"]
    }
  }
}

# Match Phrase (search for a sentance or a part of it)
# It will not work for half tokens.
GET /courses/_search
{
  "query": {
    "match_phrase": {
      "course_description": "from the business school taken by final year"
    }
  }
}

# Match Phrase Prefix (search for a sentance or a partial part of it)
GET /courses/_search
{
  "query": {
    "match_phrase_prefix": {
      "course_description": "from the business school taken by fi"
    }
  }
}

# Range Query
# Find classrooms with student_enrolled between a given range.
GET courses/_search
{
  "query": {
    "range": {
      "students_enrolled": {
        "gte": 10,
        "lte": 20
      }
    }
  }
}

# Ranges on dates

GET courses/_search
{
  "query": {
    "range": {
      "course_publish_date": {
        "gte": "2013-08-27"
      }
    }
  }
}


# Complex query integration
GET courses/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {  "name": "accounting"}}
      ],
      "must_not": [
        {"match": {"room": "e7"}}
      ],
      "should": [
        {"range": {
            "students_enrolled": {
              "gte": 10,
              "lte": 20
        }}}
      ],
      "minimum_should_match": 1
    }
  }
}
